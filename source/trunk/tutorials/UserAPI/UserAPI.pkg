<refentry id="{@id}">
 <refnamediv>
  <refname>Using CAT access API</refname>
  <refpurpose>We document how you can access CAT data without using the provided GUIs</refpurpose>
 </refnamediv>
 <refsynopsisdiv>
  <author>
    {@link mailto:twoln@umk.pl Tomasz Wolniewicz}
   <authorblurb>
   </authorblurb>
  </author>
 </refsynopsisdiv>
 {@toc}
  <refsect1 id="{@id intro}">
<title>Introduction</title>
<para>
Various programs may want to access CAT data thus becoming another CAT UI.
CAT access API is here to enable and ease this access. Please be aware that CAT
data is restricted by Terms of Use. The linkt to ToU is always sent within CAT results.
Please respect the rules.
</para>
<para>
Data access is provided by HTTP calls to the script <em>user/API.php</em>. You may use both GET and POST.
The main mandatory argument is <emphasis>action</emphasis> which tells CAT what you require.
Since most data is language-specific, you should normally specify
the <emphasis>lang</emphasis> argument as well.
The list of available languages and their identifiers is available via
the <emphasis>listLanguages</emphasis> call.
Most calls require an <emphasis>id</emphasis> argumant as well, where you need to provide
an internal CAT identifier of the object that you require. The values of these identifiers
are available via the CAT list calls.
</para>
</refsect1>
  <refsect1 id="{@id action-list}">
<title>List of available actions</title>
<itemizedlist>
<listitem>
{@link listLanguages}
</listitem>
<listitem>
listCountries
</listitem>
<listitem>
listAllIdentityProviders
</listitem>
<listitem>
listIdentityProviders
</listitem>
<listitem>
listProfiles
</listitem>
<listitem>
profileAttributes
</listitem>
<listitem>
listDevices
</listitem>
<listitem>
generateInstaller
</listitem>
<listitem>
downloadInstaller
</listitem>
<listitem>
sendLogo
</listitem>
</itemizedlist>

</refsect1>
<refsect1 id="{@id json}">
<title>JSON structure</title>
<para>
With the exception of sendLogo, which sends an image, data returned by each called is sent as a JSON encoded array.
The main array has three entries: <emphasis>status</emphasis>, <emphasis>data</emphasis> and <emphasis>tou</emphasis>.
The <emphasis>status</emphasis> entry returns the success or failure of the call. If <emphasis>status</emphasis> equals <emphasis>0</emphasis> then the call failes and <emphasis>data</emphasis>  could contain an error message. If <emphasis>status</emphasis> equals <emphasis>1</emphasis> then <emphasis>data</emphasis> will contain all returned information.
The <emphasis>tou</emphasis> entry is just the Terms of Use statement.
</para>
In most cases <emphasis>data</emphasis> is an array listing requested objects like languages, countries, IdPs, profiles. See the decriptions of individual actions for more information on <emphasis>data</emphasis> structure.
<para>
</para>
</refsect1>
<refsect1 id="{@id actions}">
<title>Actions in detail</title>

  <refsect2 id="{@id listLanguages}">
    <title>listLanguages</title>
    <para><emphasis>mandatory arguments</emphasis></para>
    <para>
      none
    </para>
    <para><emphasis>optional arguments</emphasis></para>
    <para>
      none
    </para>
    <para><emphasis>data</emphasis></para>
    <para>
      Array of triples: {"id", "display", "locale"}.
    </para>

  </refsect2>

  <refsect2 id="{@id listCountries}">
    <title></title>
    <para><emphasis>mandatory arguments</emphasis></para>
    <para>
      none
    </para>
    <para><emphasis>optional arguments</emphasis></para>
    <para>
      lang
    </para>
    <para><emphasis>data</emphasis></para>
    <para>
      Array of tuples: {"id", "display"}.
    </para>
    
  </refsect2>

  <refsect2 id="{@id listAllIdentityProviders}">
    <title>listAllIdentityProviders</title>
    <para><emphasis>mandatory arguments</emphasis></para>
    <para>
      none
    </para>
    <para><emphasis>optional arguments</emphasis></para>
    <para>
      lang
    </para>
    <para><emphasis>data</emphasis></para>
    <para>
      The main purpose of this action is to provide listing for DiscoJusce, therefore
      the structure of the result is talored to DJ needs.
      The result is an array of tupples {"entityID","title","country","geo","icon","id"}.
      <emphasis>geo</emphasis> and <emphasis>icon</emphasis> are optional. <emphasis>id</emphasis>
      is provided for conformance reasons, but is just a copy of <emphasis>entityID</emphasis>.
      <emphasis>geo</emphasis> can be either a {"lon", "lat"} touple or an array of such tupples.
    </para>
    
  </refsect2>

  <refsect2 id="{@id listIdentityProviders}">
    <title>listIdentityProviders</title>
    <para><emphasis>mandatory arguments</emphasis></para>
    <para>
      id - the identifier of a country to be listed.
    </para>
    <para><emphasis>optional arguments</emphasis></para>
    <para>
      lang
    </para>
    <para><emphasis>data</emphasis></para>
    <para>
      Array of tuples: {"id", "display"}.
    </para>

  </refsect2>

  <refsect2 id="{@id listProfiles}">
    <title>listProfiles</title>
    <para><emphasis>mandatory arguments</emphasis></para>
    <para>
      id - the identifier of an IdP
    </para>
    <para><emphasis>optional arguments</emphasis></para>
    <para>
      lang
    </para>
    <para>
      sort - if equal to 1 sort profiles by name (case-ignore)
    </para>
    <para>
      Array of tuples: {"id", "display", "idp_name", "logo"}.
      <emphasis>logo</emphasis> can be <emphasis>0</emphasis> or <emphasis>1</emphasis> and
      shows if logo is available.
    </para>

  </refsect2>

  <refsect2 id="{@id profileAttributes}">
    <title>profileAttributes</title>
    <para><emphasis>mandatory arguments</emphasis></para>
    <para>
      id - the identifier of the profile to be shown
    </para>
    <para><emphasis>optional arguments</emphasis></para>
    <para>
      lang
    </para>
    <para><emphasis>data</emphasis></para>
 <para>
      Array of tuples: {"local_email","local_phone","local_url","description","devices"}.
      All <emphasis>local_</emphasis> entries  and <emphasis>description</emphasis> are optional.
      <emphasis>devices</emphasis> is an array of touples {"id","display","status","redirect",
      "eap_customtext","device_customtext"}.
      
    </para>

  </refsect2>

  <refsect2 id="{@id listDevices}">
    <title>listDevices</title>
    <para><emphasis>mandatory arguments</emphasis></para>
    <para>
      id - the identifier of the profile for which the devices will be listed
    </para>
    <para><emphasis>optional arguments</emphasis></para>
    <para>
      lang
    </para>
    <para><emphasis>data</emphasis></para>
    <para>
    array of touples {"id","display","status","redirect", "eap_customtext","device_customtext"}.
    </para>
  </refsect2>

  <refsect2 id="{@id generateInstaller}">
    <title>generateInstaller</title>
    <para><emphasis>mandatory arguments</emphasis></para>
    <para>
      id - identifier of the device; profile - identifier of the profile
    </para>
    <para><emphasis>optional arguments</emphasis></para>
    <para>
      lang
    </para>
    <para><emphasis>data</emphasis></para>
    <para>
    array of touples {"profile","device","link", "mime"}.
    </para>
  </refsect2>

  <refsect2 id="{@id downloadInstaller}">
    <title>downloadInstaller</title>
    <para><emphasis>mandatory arguments</emphasis></para>
    <para>
      id - identifier of the device; profile - identifier of the profile
    </para>
    <para><emphasis>optional arguments</emphasis></para>
    <para>
      lang; generatedfor - either 'user' or 'admin' - defaults to user
    </para>
    <para><emphasis>returned data</emphasis></para>
    <para>
    installer file
    </para>
  </refsect2>

  <refsect2 id="{@id sendLogo}">
    <title>sendLogo</title>
    <para><emphasis>mandatory arguments</emphasis></para>
    <para>
      id - the identifier of the identity provider
    </para>
    <para><emphasis>optional arguments</emphasis></para>
    <para>
      lang
    </para>
    <para><emphasis>returned data</emphasis></para>
    <para>
    logo image
    </para>
  </refsect2>

</refsect1>

</refentry>

